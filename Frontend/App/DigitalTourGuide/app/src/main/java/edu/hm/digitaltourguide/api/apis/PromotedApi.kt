/**
* Digitaler Reiseführer
* REST Api für den digitalen Reiseführer.
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package edu.hm.digitaltourguide.api.apis


import edu.hm.digitaltourguide.api.infrastructure.ApiClient
import edu.hm.digitaltourguide.api.infrastructure.ClientException
import edu.hm.digitaltourguide.api.infrastructure.ClientError
import edu.hm.digitaltourguide.api.infrastructure.ServerException
import edu.hm.digitaltourguide.api.infrastructure.ServerError
import edu.hm.digitaltourguide.api.infrastructure.MultiValueMap
import edu.hm.digitaltourguide.api.infrastructure.RequestConfig
import edu.hm.digitaltourguide.api.infrastructure.RequestMethod
import edu.hm.digitaltourguide.api.infrastructure.ResponseType
import edu.hm.digitaltourguide.api.infrastructure.Success
import edu.hm.digitaltourguide.api.infrastructure.toMultiValue

class PromotedApi(basePath: kotlin.String = defaultBasePath) : ApiClient(basePath) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty("edu.hm.digitaltourguide.api.baseUrl", "http://SERVER/v2")
        }
    }

    /**
    * Get all promoted pois in an area
    * 
    * @param longitudeMin  
    * @param latitudeMin  
    * @param longitudeMax  
    * @param latitudeMax  
    * @return kotlin.collections.List<kotlin.String>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getPromotedPOIs(longitudeMin: java.math.BigDecimal, latitudeMin: java.math.BigDecimal, longitudeMax: java.math.BigDecimal, latitudeMax: java.math.BigDecimal) : kotlin.collections.List<kotlin.String> {
        val localVariableConfig = getPromotedPOIsRequestConfig(longitudeMin = longitudeMin, latitudeMin = latitudeMin, longitudeMax = longitudeMax, latitudeMax = latitudeMax)

        val localVarResponse = request<kotlin.collections.List<kotlin.String>>(
            localVariableConfig
        )

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as kotlin.collections.List<kotlin.String>
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
    * To obtain the request config of the operation getPromotedPOIs
    *
    * @param longitudeMin  
    * @param latitudeMin  
    * @param longitudeMax  
    * @param latitudeMax  
    * @return RequestConfig
    */
    fun getPromotedPOIsRequestConfig(longitudeMin: java.math.BigDecimal, latitudeMin: java.math.BigDecimal, longitudeMax: java.math.BigDecimal, latitudeMax: java.math.BigDecimal) : RequestConfig {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, List<kotlin.String>>()
            .apply {
                put("longitudeMin", listOf(longitudeMin.toString()))
                put("latitudeMin", listOf(latitudeMin.toString()))
                put("longitudeMax", listOf(longitudeMax.toString()))
                put("latitudeMax", listOf(latitudeMax.toString()))
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        
        val localVariableConfig = RequestConfig(
            method = RequestMethod.GET,
            path = "/promoted",
            query = localVariableQuery,
            headers = localVariableHeaders,
            body = localVariableBody
        )

        return localVariableConfig
    }

}
